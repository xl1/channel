// Generated by CoffeeScript 1.4.0
(function() {
  var $, $$, Game, log, main,
    __hasProp = {}.hasOwnProperty;

  $ = function(id) {
    return document.getElementById(id);
  };

  $$ = function(q) {
    return [].slice.call(document.querySelectorAll(q));
  };

  log = function(text) {
    var div;
    div = document.createElement('div');
    div.textContent = text;
    return document.body.appendChild(div);
  };

  Game = (function() {

    Game.prototype.BASE_URL = '/channel/';

    function Game() {
      this.field = $('field');
      this.buttons = $$('#field > .button');
    }

    Game.prototype.send = function(type, param, callback) {
      var key, paramString, value, xhr;
      paramString = ((function() {
        var _results;
        _results = [];
        for (key in param) {
          if (!__hasProp.call(param, key)) continue;
          value = param[key];
          _results.push("" + key + "=" + value);
        }
        return _results;
      })()).join('&');
      xhr = new XMLHttpRequest();
      xhr.open('GET', this.BASE_URL + type + '?' + paramString, true);
      xhr.onload = function() {
        return typeof callback === "function" ? callback(xhr.responseText) : void 0;
      };
      return xhr.send(null);
    };

    Game.prototype.addMark = function(data) {
      var i, mark, _i, _len, _ref, _results;
      _ref = data.split('');
      _results = [];
      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
        mark = _ref[i];
        if (mark !== '_') {
          _results.push(this.buttons[i].innerText = mark);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    return Game;

  })();

  main = function() {
    var channel, channelToken, game, id, socket, _ref;
    game = new Game();
    _ref = document.body.dataset, id = _ref.id, channelToken = _ref.channelToken;
    channel = new goog.appengine.Channel(channelToken);
    socket = channel.open();
    socket.onopen = function() {
      return log('open');
    };
    socket.onmessage = function(e) {
      var data;
      data = e.data;
      if (data.match(/^[_ox]{9}$/)) {
        log(data);
        return game.addMark(data);
      } else {
        return log(data);
      }
    };
    return game.field.addEventListener('mouseup', function(e) {
      var button, i, _i, _len, _ref1;
      _ref1 = game.buttons;
      for (i = _i = 0, _len = _ref1.length; _i < _len; i = ++_i) {
        button = _ref1[i];
        if (button === e.target) {
          game.send('put', {
            from: id,
            x: i % 3,
            y: i / 3 | 0
          });
          return;
        }
      }
    }, false);
  };

  main();

}).call(this);
